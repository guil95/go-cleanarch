version: "3"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-cleanarch.dev
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - .:/app
    networks:
      - bubble
  mongo.db:
    container_name: mongo.db.go-cleanarch
    image: mongo:3.4
    command: mongod --maxConns 10000
    volumes:
      - mongo:/data/db
      - ./db/migrations/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - bubble
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper.dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - bubble
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka.dev
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bubble

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop.dev
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    networks:
      - bubble

networks:
  bubble:
    external: true

volumes:
  mongo: